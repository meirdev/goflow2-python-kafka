services:
  kafka:
    image: bitnami/kafka:latest
    restart: always
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,INTERNAL://:9094
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092,INTERNAL://kafka:9094
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093

  goflow2:
    image: netsampler/goflow2:latest
    ports:
      - "6343:6343/udp"
      - "2055:2055/udp"
      - "8080:8080"
    restart: always
    command:
      - -transport.kafka.brokers=kafka:9094
      - -transport=kafka
      - -transport.kafka.topic=flows
      - -format=bin
    depends_on:
      - kafka

  clickhouse:
    container_name: clickhouse
    image: clickhouse/clickhouse-server:24.12-alpine
    ports:
      - "8123:8123"
      - "9000:9000"
      - "9363:9363"
    volumes:
      - ./clickhouse-init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./protobuf-compiler/flow.proto:/var/lib/clickhouse/format_schemas/flow.proto
    depends_on:
      - kafka

  nflow-generator:
    image: networkstatic/nflow-generator
    restart: always
    command: -p 2055 -t goflow2
